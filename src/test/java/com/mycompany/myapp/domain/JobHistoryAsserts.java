package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JobHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobHistoryAllPropertiesEquals(JobHistory expected, JobHistory actual) {
        assertJobHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertJobHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobHistoryAllUpdatablePropertiesEquals(JobHistory expected, JobHistory actual) {
        assertJobHistoryUpdatableFieldsEquals(expected, actual);
        assertJobHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobHistoryAutoGeneratedPropertiesEquals(JobHistory expected, JobHistory actual) {
        assertThat(expected)
            .as("Verify JobHistory auto generated properties")
            .satisfies(e -> assertThat(e.id).as("check id").isEqualTo(actual.id));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobHistoryUpdatableFieldsEquals(JobHistory expected, JobHistory actual) {
        assertThat(expected)
            .as("Verify JobHistory relevant properties")
            .satisfies(e -> assertThat(e.startDate).as("check startDate").isEqualTo(actual.startDate))
            .satisfies(e -> assertThat(e.endDate).as("check endDate").isEqualTo(actual.endDate))
            .satisfies(e -> assertThat(e.language).as("check language").isEqualTo(actual.language));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJobHistoryUpdatableRelationshipsEquals(JobHistory expected, JobHistory actual) {
        assertThat(expected)
            .as("Verify JobHistory relationships")
            .satisfies(e -> assertThat(e.job).as("check job").isEqualTo(actual.job))
            .satisfies(e -> assertThat(e.department).as("check department").isEqualTo(actual.department))
            .satisfies(e -> assertThat(e.employee).as("check employee").isEqualTo(actual.employee));
    }
}
